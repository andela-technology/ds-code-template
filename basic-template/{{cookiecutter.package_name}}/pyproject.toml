[tool.poetry]
name = "{{cookiecutter.package_name}}"
version = "0.0.1"
repository = "https://github.com/andela-technology/{{cookiecutter.package_name}}"
readme = "README.md"
packages = [
  {include = "{{cookiecutter.package_name}}"}
]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
numpy = "1.23.4"
google-cloud-storage = "2.6.0"
google-cloud-bigquery = "^3.4.1"
click = "^8.1.3"
pandas = "^1.5.2"
tqdm = "^4.64.1"
matplotlib = "^3.6.2"
scikit-learn = "1.2.0"
google-api-core = "^2.11.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
mypy = "^0.981"
pre-commit = "^2.20.0"
tox = "^3.25.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py39']
preview = true

[tool.mypy]
files = ["{{cookiecutter.module_name}}"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
